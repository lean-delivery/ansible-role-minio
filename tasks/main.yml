---
# tasks file for minio

- block:
  - name: Create minio user
    user:
      name: '{{ minio_user }}'
      home: '{{ minio_home }}'
      shell: /sbin/nologin

  - name: Ensure that minio directories are created
    file:
      path: '{{ minio_dir }}'
      state: directory
      mode: 0750
      owner: '{{ minio_user }}'
      group: '{{ minio_group }}'
    loop:
      - '{{ minio_home }}'
      - '{{ minio_home }}/bin'
      - '{{ minio_data_path }}'
    loop_control:
      loop_var: minio_dir

  - name: Copy minio binary file
    get_url:
      url: '{{ minio_package_source }}'
      dest: '{{ minio_home }}/bin/minio'
      mode: +x
      owner: '{{ minio_user }}'
      group: '{{ minio_group }}'
    register: file_downloaded
    retries: 15
    delay: 5
    until: file_downloaded is succeeded

  - name: Copy minio templates
    template:
      src: '{{ conf_item.src }}.j2'
      dest: '{{ conf_item.dest }}'
      backup: True
      mode: 0644
      owner: '{{ conf_item.user }}'
    loop:
      - src: minio.conf
        dest: '{{ minio_home }}/minio.conf'
        user: '{{ minio_user }}'
      - src: minio.service
        dest: /etc/systemd/system/minio.service
        user: root
    loop_control:
      loop_var: conf_item

  - name: Start Minio
    service:
      name: minio
      state: started
      enabled: True

  - name: Wait until the configuration file appears
    wait_for:
      path: '{{ minio_home }}/data/.minio.sys/config/config.json'

  - name: Copy minio config.json
    template:
      src: config.json.j2
      dest: '{{ minio_home }}/data/.minio.sys/config/config.json'
      backup: True
      mode: 0644
      owner: '{{ minio_user }}'
    notify:
    - Restart Minio

  become: True

- block:

  - name: Enable EPEL repository
    yum:
      name: 'https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm'
      state: present
    register: package_install
    until: package_install is succeeded
    when: ansible_os_family == 'RedHat'

  - name: Load variables for OS family
    include_vars: '{{ ansible_os_family }}.yml'

  - name: Install requirements
    package:
      name: '{{ requirements }}'
      state: present
    register: package_install
    until: package_install is succeeded
    become: True

  - name: SSL preparation
    include_tasks: 'ssl/{{ ansible_system }}.yml'

  when:
    - minio_enable_ssl
